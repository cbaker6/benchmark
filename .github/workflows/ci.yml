name: ci
on:
  push:
    branches: [master]
  pull_request:
    branches:
      - '**'
env:
  NODE_VERSION: 18.1.0
jobs:
  benchmark:
    strategy:
      matrix:
        include:
          - name: MongoDB vs PostgreSQL
            POSTGRES_IMAGE: postgis/postgis:15-3.3
      fail-fast: false
    name: ${{ matrix.name }}
    timeout-minutes: 15
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: ${{ matrix.POSTGRES_IMAGE }}
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MONGODB_VERSION: 6.0.2
      MONGODB_TOPOLOGY: replicaset
      MONGODB_STORAGE_ENGINE: wiredTiger
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/parse_benchmark
      NODE_VERSION: ${{ matrix.NODE_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.NODE_VERSION }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.NODE_VERSION }}-
      - name: Install dependencies
        run: |
          npm install -g mongodb-runner
          npm install
          mongodb-runner start
          bash scripts/before_script_postgres.sh
          bash scripts/before_script_postgres_conf.sh
      - name: Run benchmarks
        run: |
          npm run lint
          npm test -- --maxWorkers=4
          npm start -- run -c 1 -p 1 -d 2
          if [ ! -e "result.json" ]; then exit 1; fi
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
